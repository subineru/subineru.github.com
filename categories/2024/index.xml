<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2024 on CJ Hung Blog</title>
    <link>https://www.cjhung.tw/categories/2024/</link>
    <description>Recent content in 2024 on CJ Hung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 31 Oct 2024 20:26:00 +0800</lastBuildDate><atom:link href="https://www.cjhung.tw/categories/2024/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 autohotkey 設定音效輸出的切換快捷鍵</title>
      <link>https://www.cjhung.tw/post/2024/20241031_switch_audio_output_automation/</link>
      <pubDate>Thu, 31 Oct 2024 20:26:00 +0800</pubDate>
      
      <guid>https://www.cjhung.tw/post/2024/20241031_switch_audio_output_automation/</guid>
      <description>前言 下班回家使用電腦。專心的時候會使用耳機，放鬆的時候就會用喇叭，然後 看看劇或 Youtube 影片等等。這時候都要將滑鼠移到右下方的語音圖示， 去選擇想要的音效輸出。雖然只是幾個動作而已，太過頻繁，反而發現相當 耗時，索性找方法設定快捷鍵，來方便切換。
步驟 首先用系統管理員的身分執行PowerShell，執行 Install-Module AudioDeviceCmdlets 安裝模組，安裝完成後，就能夠 執行 Get-AudioDevice 取得電腦目前有的音效輸出。 將下面的 Index 號碼記下: Index 1 對應至觸控螢幕 ASUS MB14AHD Index 2 對應至電腦的喇叭 使用文字編輯器開啟 autohotkey 的檔案，將下面的腳本貼上儲存， 執行檔案啟用autohotkey，未來只要按fn + v就可以切換音效輸出。 #v:: ; Fn+v Hotkey t := !t ; Toggle Var (0 or 1) If (t = &amp;#34;1&amp;#34;) { Run, powershell -Command &amp;#34;Set-AudioDevice 1&amp;#34;,, hide } If (t = &amp;#34;0&amp;#34;) { Run, powershell -Command &amp;#34;Set-AudioDevice 2&amp;#34;,, hide } 參考資料 Quickly Switch Audio Devices on Windows</description>
    </item>
    
    <item>
      <title>更新 docker-compose containers 既存的 Images</title>
      <link>https://www.cjhung.tw/post/2024/20240414_docker_compose_update/</link>
      <pubDate>Sun, 14 Apr 2024 06:30:00 +0800</pubDate>
      
      <guid>https://www.cjhung.tw/post/2024/20240414_docker_compose_update/</guid>
      <description> 說明 docker-compose pull docker-compose up --force-recreate --build -d docker image prune -f 來源 How to update existing images with docker-compose? </description>
    </item>
    
    <item>
      <title>VMware 宣布停止提供 ESXi 免費版</title>
      <link>https://www.cjhung.tw/post/2024/20240214_vmware_esxi_2107518/</link>
      <pubDate>Wed, 14 Feb 2024 06:30:00 +0800</pubDate>
      
      <guid>https://www.cjhung.tw/post/2024/20240214_vmware_esxi_2107518/</guid>
      <description> 說明 博通(broadcom)在2023年11月收購Vmware之後， 先是在 2023年12月對內部員工進行大量裁員，最近進一步宣布停止支援 ESXi 免費版。
ESXi 是一種可以直接安裝在實體伺服器上的軟體，它可以讓一台伺服器分成多個虛擬的伺服器， 每個虛擬的伺服器都可以執行不同的作業系統和應用程式。這樣可以節省硬體成本，提高效能，簡化管理，並增加安全性。
因此，當 ESXi 如果轉為收費，將會影響到所有使用該產品的家庭、大小企業與政府。 過去已經安裝 ESXi 的用戶現在雖然可以繼續使用，一旦遇到安全性問題將可能無法更新。 未來新增的功能、硬體上限擴充的支援也會有影響，此次改變影響不小。
來源 End Of General Availability of the Free vSphere Hypervisor (ESXi 7.x and 8.x) (2107518) </description>
    </item>
    
    <item>
      <title>[Python] 均方根誤差(root mean square deviation, RMSE)</title>
      <link>https://www.cjhung.tw/post/2024/20240130_root_mean_square_deviation/</link>
      <pubDate>Tue, 30 Jan 2024 14:06:00 +0800</pubDate>
      
      <guid>https://www.cjhung.tw/post/2024/20240130_root_mean_square_deviation/</guid>
      <description>說明 「均方根誤差」(RMSE) 就是殘差 (預測誤差) 的標準差。 殘差是離迴歸線資料點有多遠的測量值；RMSE 則是這些殘差值有多散開的測量值。 換句話說，它會告訴您資料在最佳預測線附近的集中情況 公式 $RMSE = \sqrt{\displaystyle\sum_{ i = 1 }^{ n } \frac{(\hat{y}_i - y_i)^2}{n}}$ $\hat{y}_i$ : 預測值 $y_i$ : 觀測值 n : 觀測值的個數 範例 &amp;gt;&amp;gt;&amp;gt; from sklearn.metrics import mean_squared_error &amp;gt;&amp;gt;&amp;gt; actual = [2, 3, 5, 5, 9] &amp;gt;&amp;gt;&amp;gt; calculated = [3, 3, 8, 7, 6] &amp;gt;&amp;gt;&amp;gt; rmse = mean_squared_error(actual, calculated, squared=False) &amp;gt;&amp;gt;&amp;gt; print(&amp;#34;Root Mean Square deviation : &amp;#34; + str(rmse)) Root Mean Square deviation : 2.</description>
    </item>
    
    <item>
      <title>[Python] 解決 python 下載資料時憑證錯誤問題</title>
      <link>https://www.cjhung.tw/post/2024/20240128_self_signed_certificate_error/</link>
      <pubDate>Sun, 28 Jan 2024 15:45:00 +0800</pubDate>
      
      <guid>https://www.cjhung.tw/post/2024/20240128_self_signed_certificate_error/</guid>
      <description>狀況 今天在 Python 寫 AI 用到 langchain 模組, 使用前需要下載文字轉向量 model, 結果遇到 certificate verify ailed: self signed certificate in certificate chain (_ssl.c:997) 錯誤, 這是因為公司有網路設備在做 SSL 憑證置換的關係卡到, 解決方法除了不檢查憑證,也可以把公司的憑證匯入 certifi, 下載時就會信任公司的憑證. 這樣做如果連到不安全的網址仍然檢查, 程式會停止存取, 所以我認為是相對安全的. 後來測試以前用 requests 或 urllib module 的錯誤也不會卡住,感覺更方便.
做法如下 首先確認 certifi 安裝的路徑 先打開預存取的網站,這邊用 yahoo 網站為例, 然後選詳細資料的最上面階層的憑證,把憑證給匯出 下面第一圖是馬賽克後的憑證內容, 將憑證的內容貼到 cacert.pem 內 python 程式就可以正常下載檔案 </description>
    </item>
    
  </channel>
</rss>
