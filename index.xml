<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CJ Hung Blog</title>
    <link>https://cjhung.tw/</link>
    <description>Recent content on CJ Hung Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 01 Jun 2023 11:56:00 +0800</lastBuildDate><atom:link href="https://cjhung.tw/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Brave] Brave 開放垂直標籤</title>
      <link>https://cjhung.tw/post/2023/20230601_brave_introduce_vertical_tabs/</link>
      <pubDate>Thu, 01 Jun 2023 11:56:00 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2023/20230601_brave_introduce_vertical_tabs/</guid>
      <description>新版的 Brave 提供垂直標籤的功能，除了可以改善瀏覽器的畫面，看起來壅擠的感受。又能夠讓分頁的名字顯示得更長。
是個不錯的功能。至於要怎麼開啟呢？
請參考下面的步驟
Brave 版本 首先，請確認 Brave 的版本是 1.52 以上。
開啟垂直標籤 在網址列輸入 brave://settings/appearance，選擇設定的外觀，啟用 &amp;ldquo;使用垂直分頁&amp;rdquo;。
垂直分頁 隨意開啟幾個書籤，就會發現分頁顯示在左邊，而不是在上方。
調整垂直分頁大小 Brave 還提供一個小功能，點選紅框的按鈕之後，分頁就會只剩下圖示。
對於喜歡更美觀的人，是個不錯的功能。</description>
    </item>
    
    <item>
      <title>[Paloalto] 非對稱路由(asymmetric routing) 解決方法</title>
      <link>https://cjhung.tw/post/2022/20221024_paloalto_asymmetric_routing/</link>
      <pubDate>Mon, 24 Oct 2022 21:00:00 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2022/20221024_paloalto_asymmetric_routing/</guid>
      <description>最近幫分公司更換防火牆，從 FortiGate 更換成 PaloAlto PA-220。
前人設計網路時採用雙網關架構。其中一個網關連回總部，
另一個連外網(預設的 Gateway)，使得連回總部的流量會發生去回不同路，
在英文叫做 Asymmetric routing。 FortiGate 防火牆上可以通過，但是 PaloAlto 就擋了。
想到了什麼 在網路架構，這種做法還滿常發生。然而，因為現今的次世代防火牆為了資安，
往往會進一步檢查 OSI 的 session layer，在看不到完整封包下，
Paloalto 認為有 evasion attack 問題故進行阻擋。於是，我想到兩種方式處理。
一種是透過 DHCP 來配發靜態路由，讓內外網的流量走到各自該走的網關(參考文件1)，
可惜最後實驗我沒有成功。第二種方式是讓 Paloalto 開放允許(參考文件2)。
如果只要開放部分端口允許非對稱路由，首先在 NETWORK -&amp;gt; Zone Protection 建立 Profile，之後套用到 Zones 上即可。
具體設定如下:
Paloalto 也能直接透過 CLI 對全域做開放，不建議這樣做，
有些端口如外網並沒有非對稱路由的問題，但也會跟著一起開放，就會有潛在的資安風險。
&amp;gt; configure Entering configuration mode [edit] # set deviceconfig setting tcp asymmetric-path bypass # set deviceconfig setting session tcp-reject-non-syn no # commit 參考文件 1.</description>
    </item>
    
    <item>
      <title>[Python] Pandas DataFrame 如何顯示所有欄位</title>
      <link>https://cjhung.tw/post/2022/20220511_pandas_maxcolumns/</link>
      <pubDate>Tue, 10 May 2022 21:00:00 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2022/20220511_pandas_maxcolumns/</guid>
      <description>在使用 Python 的 Pandas DataFrame，如果要列出結果，顯示的行數只有 20 行。
import pandas as pdimport numpy as npdf = pd.DataFrame(np.random.randint(0, 26,size=(10, 26)), columns=list(&#39;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;))df修改參數為 None 之後，就會顯示所有的行數，不再只顯示 20 行。
pd.set_option(&amp;quot;display.max.columns&amp;quot;, None)df</description>
    </item>
    
    <item>
      <title>網路練習 routing decision</title>
      <link>https://cjhung.tw/post/2020/200209_routing_decision/</link>
      <pubDate>Sun, 09 Feb 2020 19:00:27 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2020/200209_routing_decision/</guid>
      <description></description>
    </item>
    
    <item>
      <title>[食記]百魚鮮食屋</title>
      <link>https://cjhung.tw/post/2019/191109-%E7%99%BE%E9%AD%9A%E9%AE%AE%E9%A3%9F%E5%B1%8B/</link>
      <pubDate>Sat, 09 Nov 2019 20:00:00 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2019/191109-%E7%99%BE%E9%AD%9A%E9%AE%AE%E9%A3%9F%E5%B1%8B/</guid>
      <description>位在捷運西湖站一號出口下，步行約四分鐘即可到達，鄰近有西湖市場 、西湖國小
價格還算可以，在 Google 地圖至少有 600 位顧客給予 4.5 顆星以上的評價
百魚鮮食屋在門口處擺放的菜單
壽司檯前有坐位可以看到師傅正在切將要入口的生魚片
我點了鮭魚親子丼
魚卵咬下去，甜甜的滋味在嘴裡化開非常好吃
鮭魚也相當軟嫩，下層的海苔配飯很搭，一口接一口很快就吃完
味增湯的料相當的多，可惜我沒有拍好
有蝦子、蛤蜊 、嫩豆腐等等等，吃完相當有飽足感
聽說喝不夠可以在續，但我吃完已經相當的飽了</description>
    </item>
    
    <item>
      <title>一日北高 360 KM ; 爬升 817 M </title>
      <link>https://cjhung.tw/post/2019/191101-%E4%B8%80%E6%97%A5%E5%8C%97%E9%AB%98/</link>
      <pubDate>Sat, 02 Nov 2019 18:00:00 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2019/191101-%E4%B8%80%E6%97%A5%E5%8C%97%E9%AB%98/</guid>
      <description>路線概要: 八里(起點)訊塘廣場 ➙ 蘆竹(台15接台61) ➙ 觀音 ➙ 新豐(台61接回台15 ) ➙ 新竹香山站 ➙ 竹南 ➙ 白沙屯(台61轉台1) ➙ 通宵(台1) ➙ 苑裡龍德家商(台1右轉接台61) ➙ 大甲(台61) ➙ 清水 ➙ 龍井(台61接台17) ➙ 中彰大橋 ➙ 伸港 ➙ 鹿港(台17) ➙ 彰化 彰濱站(第2檢查點) ➙ 芳苑 ➙ 麥寮(台17) ➙ 台西 ➙ 東石(台17) ➙ 布袋(台17) ➙ 台南南鯤鯓站 ➙ 七股 ➙ 安平(台17) ➙ 茄萣(台17) ➙ 永安 ➙ 梓官 ➙ 左營(台17) ➙ 屏山國小 終點
距離 360 km 海拔 817 m GPX 下載
約騎難度分級：(4)</description>
    </item>
    
    <item>
      <title>蘆竹大古山  69 KM ; 爬升 590 M </title>
      <link>https://cjhung.tw/post/2019/190831-%E5%A4%A7%E5%8F%A4%E5%B1%B1/</link>
      <pubDate>Sat, 31 Aug 2019 21:00:18 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2019/190831-%E5%A4%A7%E5%8F%A4%E5%B1%B1/</guid>
      <description>路線概要: 新北大道 ➙ 泰林路 ➙ 大科路➙ 忠孝路 ➙ 文化北路一段 ➙ 南勢街 ➙ 山林路 ➙ 南山路 ➙ 泉州路 ➙ 大吉路 ➙ 蘆竹大古山 ➙ 市道106號 ➙ 濱海公路 ➙ 河濱 ➙ 社子 ➙ 大稻埕碼頭
從泰林路轉進大科路會遇到 20% 左右的坡度，爬起來會有點吃力以外，大部分都是不困難的路線．從濱海公路開始的回程，就會遭遇逆風，但是騎起來不太有壓力．
距離 69 km 海拔 590 m GPX 下載
約騎難度分級：(1)
(1)★
(2)★★
(3)★★★
(4)★★★★
(5)★★★★★\
大古山入口
大古山福山宮
社子島</description>
    </item>
    
    <item>
      <title>初探 Linux 的大括號擴展(Brace expansion)</title>
      <link>https://cjhung.tw/post/2019/190824-brace-expansion/</link>
      <pubDate>Sat, 24 Aug 2019 15:00:27 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2019/190824-brace-expansion/</guid>
      <description>大括號擴展(Brace expansion)是一種機制, 協助我們使用省略的字串產生相對應的字串組合,
而且產生的字串組合, 不一定要有實際檔案的存在,
在這裡下指令 echo 做示範, 套用到 cp 指令後, 檔案 foo1.txt 就會複製到 foo2.txt
# echo foo{1,2}.txt foo1.txt foo2.txt # cp -v foo{1,2}.txt &amp;#39;foo1.txt&amp;#39; -&amp;gt; &amp;#39;foo2.txt&amp;#39; 大括號擴展比較常用的關鍵字有 逗號(,) 和 句號(.) ,
逗號是用來分開不同的字串, 而句號是用來產生有序列性的字串
逗號 使用範例
# echo file{,1,2} file file1 file2 # mkdir -v file{,1,2} mkdir: created directory &amp;#39;file&amp;#39; mkdir: created directory &amp;#39;file1&amp;#39; mkdir: created directory &amp;#39;file2&amp;#39; 句號 使用範例
# echo file{1..5} file1 file2 file3 file4 file5 # mkdir -v file{1.</description>
    </item>
    
    <item>
      <title>Timberman 砍了1026個木頭</title>
      <link>https://cjhung.tw/post/2019/190512-timberman/</link>
      <pubDate>Sun, 12 May 2019 13:55:18 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2019/190512-timberman/</guid>
      <description>玩 timberman 來訓練反應, 等一定成績再來找其他遊戲玩</description>
    </item>
    
    <item>
      <title>Timberman 砍了767個木頭</title>
      <link>https://cjhung.tw/post/2019/190511-timberman/</link>
      <pubDate>Sat, 11 May 2019 17:00:27 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2019/190511-timberman/</guid>
      <description></description>
    </item>
    
    <item>
      <title>練習 Python 100 Days(5)</title>
      <link>https://cjhung.tw/post/2019/python-100days5/</link>
      <pubDate>Sat, 11 May 2019 17:00:27 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2019/python-100days5/</guid>
      <description>練習 Python 100 Days 前幾天的比較簡單, 就從第五天的練習題開始
水仙花數(Narcissistic number) 用來描述一個 N 位非負數, 其中每個數字的 N 次方和等於該數字本身 代碼:
for num in range(1000): squares = len(str(num)) count = 0 count = sum([int(x)**squares for x in str(num)]) if num == count: print(f&amp;#34;The Narcissistic number is : {count}&amp;#34; ) 完美數(Perfect number) 用來描述一個數字, 除了自己以外的所有真因子的總和, 等於它自己, 就是完美數 代碼:
for num in range(100): list = [x for x in range(1, num) if num%x==0] if sum != [] and sum(list) == num: print(num) 參考: Python-100-Days - Day5</description>
    </item>
    
    <item>
      <title>實數轉換成整數</title>
      <link>https://cjhung.tw/post/2019/%E5%AF%A6%E6%95%B8%E8%BD%89%E6%8F%9B%E6%88%90%E6%95%B4%E6%95%B8/</link>
      <pubDate>Sun, 07 Apr 2019 15:29:29 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2019/%E5%AF%A6%E6%95%B8%E8%BD%89%E6%8F%9B%E6%88%90%E6%95%B4%E6%95%B8/</guid>
      <description>前言 ​	使用 int() 函式做數值轉換, 會遇到小數點以下有值時, 會被無條件捨去的困擾,
從 stackoverflow 看到有兩種解法
&amp;gt;&amp;gt;&amp;gt; num1 = 1.0 &amp;gt;&amp;gt;&amp;gt; int(num1) 1 &amp;gt;&amp;gt;&amp;gt; num2 = 1.5 &amp;gt;&amp;gt;&amp;gt; int(num2) 1 解法一 ​	使用 is_integer() 函式配合 if 判斷是否為整數, 是才做 int() 轉換
&amp;gt;&amp;gt;&amp;gt; (1.0).is_integer() True &amp;gt;&amp;gt;&amp;gt; (1).is_integer() ### 缺點是已經是整數的變數, 會跳錯 Traceback (most recent call last): File &amp;#34;&amp;lt;stdin&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; AttributeError: &amp;#39;int&amp;#39; object has no attribute &amp;#39;is_integer&amp;#39; &amp;gt;&amp;gt;&amp;gt; (1.5).is_integer() False &amp;gt;&amp;gt;&amp;gt; (0.9999999999 ).is_integer() False &amp;gt;&amp;gt;&amp;gt; data = [1.</description>
    </item>
    
    <item>
      <title>使用 Pandas groupby 和 agg 合併資料</title>
      <link>https://cjhung.tw/post/2019/python-%E4%BD%BF%E7%94%A8-pandas-groupby-%E5%92%8C-agg-%E5%90%88%E4%BD%B5%E8%B3%87%E6%96%99/</link>
      <pubDate>Sun, 03 Mar 2019 22:34:27 +0800</pubDate>
      
      <guid>https://cjhung.tw/post/2019/python-%E4%BD%BF%E7%94%A8-pandas-groupby-%E5%92%8C-agg-%E5%90%88%E4%BD%B5%E8%B3%87%E6%96%99/</guid>
      <description>前因 想要把下面 dataframe , 分類後合併在一起
order devie abbr 0 first memory m 1 second cpu c 2 third disk d 3 first cpu c 成為下面的 data format
order devie abbr 0 first memory, cpu [m, c] 1 second cpu [c] 2 third disk [d] 先建立兩個 lambda 變數 ​ f1 的功用是將 dataframe 轉換成字串, f2 則將 dataframe 轉換成 list
&amp;gt;&amp;gt;&amp;gt;f1 = lambda x: &amp;#34;, &amp;#34;.join(x.dropna()) &amp;gt;&amp;gt;&amp;gt;f1(data.abbr) &amp;#39;m, c, d, c&amp;#39; &amp;gt;&amp;gt;&amp;gt;f2 = lambda x: [z for y in x for z in y] &amp;gt;&amp;gt;&amp;gt;f2(data.</description>
    </item>
    
  </channel>
</rss>
